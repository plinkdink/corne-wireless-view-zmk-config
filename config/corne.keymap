/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        wp1: wp1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N1 &kp N2 &kp N7>;
            label = "WP1";
        };

        wp2: wp2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(J) &kp LS(T) &kp LS(B) &kp I &kp R &kp C &kp H &kp W &kp O &kp D &kp DLLR &kp N2 &kp RET>;
            label = "WP2";
        };

        wp3: wp3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp J &kp O &kp N &kp A &kp T &kp H &kp A &kp N &kp DOT &kp T &kp A &kp N &kp G &kp N2>;
            label = "WP3";
        };

        wp4: wp4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp N &kp T &kp E &kp N &kp DLLR &kp J &kp T &kp N1 &kp RET>;
            label = "WP4";
        };

        sw1: sw1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp PIPE &kp SPACE>;
            label = "SW1";
        };

        sw2: sw2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp SPACE &kp MINUS &kp SPACE>;
            label = "SW2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "DEFAULT";
            bindings = <
&kp TAB             &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P                     &kp BSPC
&mt LCTRL CAPSLOCK  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &mt LEFT_SHIFT SEMICOLON  &kp SQT
&kp LSHFT           &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH                  &kp DEL
                                  &kp LEFT_ALT  &to 1  &kp SPACE    &kp RET  &mo 2  &kp MINUS
            >;
        };

        WORK {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "WORK";
            bindings = <
&kp ESC  &trans  &trans    &kp UP_ARROW                &kp LC(PG_UP)  &kp LC(PG_DN)    &kp KP_SLASH     &kp KP_NUMBER_7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &trans
&trans   &trans  &kp LEFT  &kp DOWN                    &kp RIGHT      &kp PERCENT      &kp KP_MULTIPLY  &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp LEFT_ALT
&trans   &trans  &trans    &trans                      &sw1           &sw2             &trans           &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_DOT    &trans
                           &mt LEFT_GUI DOUBLE_QUOTES  &to 0          &trans           &trans           &mo 2            &kp KP_N0
            >;
        };

        FUNCTION {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "FUNCTION";
            bindings = <
&kp ESC  &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp F1   &kp F2    &kp F3  &kp F4    &kp F5        &kp F6       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp F7   &kp F8    &kp F9  &kp F10   &kp F11       &kp F12      &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                           &kp LALT  &kp LEFT_GUI  &kp SPACE    &kp RET    &to 0      &to 3
            >;
        };

        BT {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &to 0        &to 0  &to 0  &to 0  &to 0  &out OUT_TOG
&to 0       &to 0         &to 0         &to 0         &to 0         &bootloader     &bootloader  &to 0  &to 0  &to 0  &to 0  &to 0
&to 0       &to 0         &to 0         &to 0         &to 0         &to 0           &to 0        &to 0  &to 0  &to 0  &to 0  &to 0
                                        &kp KP_NUM    &to 0         &to 0           &to 0        &mo 4  &to 0
            >;
        };

        SECRET {
            bindings = <
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &wp1   &wp2   &wp3   &wp4   &to 0  &to 0
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &to 0  &to 0  &to 0  &to 0  &to 0  &to 0
&to 0  &to 0  &to 0  &to 0  &to 0  &to 0    &to 0  &to 0  &to 0  &to 0  &to 0  &to 0
                     &to 0  &to 0  &to 0    &to 0  &to 0  &to 0
            >;
        };
    };
};
